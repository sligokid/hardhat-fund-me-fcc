{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCheaperGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc01477af9979bd3565f9540e4bd16eff6aec330e19c10e2aff32cb764c450f1f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1040129",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x67e3433e33f506fa306941b80a27f8d5ee31bf7cb05d592dcb4e1398677ec40d",
    "transactionHash": "0xc01477af9979bd3565f9540e4bd16eff6aec330e19c10e2aff32cb764c450f1f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1040129",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9d423965dd191723e7ec428f30b5ae54",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCheaperGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Kieran Mc Gowan\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Kieran Mc Gowan\\n *  @notice This contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18; // Gwei\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events and modifers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _; // now execute the rest of the code\\n    }\\n\\n    // Functions - constructor\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // Functions - receive and callbacks\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to send more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // reset our funders totals\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array with zero elements\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function withdrawCheaperGas() public onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        // reset our funders totals\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array with zero elements\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x0727326afe7ed9262d5118c6acb0c2d6d8ff0ae7a2ff8090ca5e90869aab7beb\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// cannot have any state and cannot send ether, and all functions are internal\\nlibrary PriceConverter {\\n    // convert ETH to USD on testnet using a chainlink oracle source\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ABI and Address of data source contract: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        (, int256 price, , , ) = priceFeed.latestRoundData(); // price has 8 decimal places\\n        return uint256(price * 1e10); // 1 ** 10 = 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    // both price and amount are have 18 decimal places, 1st parameter is the object called (msg.value)\\n    function getConversionRate(\\n        uint256 _ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // eg. 3000_000000000000000000\\n        // 1_00000000000000000\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x9398d07a264f2493356976e093f555e8b9193e541c90570e66163733c7b498ce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012fa380380620012fa8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c61117462000186600039600081816101b5015281816103ab0152818161047901526106c801526111746000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610104578063a48b45551461012f578063b60d42881461016c578063d7b4750c146101765761007b565b806314a96ea0146100805780633ccfd60b146100975780636b69a592146100ae578063893d20e8146100d9575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100ac610477565b005b3480156100ba57600080fd5b506100c36106b7565b6040516100d09190610cc2565b60405180910390f35b3480156100e557600080fd5b506100ee6106c4565b6040516100fb9190610c4c565b60405180910390f35b34801561011057600080fd5b506101196106ec565b6040516101269190610c67565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190610acc565b610716565b6040516101639190610cc2565b60405180910390f35b61017461075e565b005b34801561018257600080fd5b5061019d60048036038101906101989190610af9565b610898565b6040516101aa9190610c4c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610238576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102bc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610272575b5050505050905060005b81518110156103465760008282815181106102e4576102e361102a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061033e90610f83565b9150506102c6565b50600067ffffffffffffffff81111561036257610361611059565b5b6040519080825280602002602001820160405280156103905781602001602082028036833780820191505090505b50600190805190602001906103a69291906109bc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610c37565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610c82565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105a7576000600182815481106105225761052161102a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059f90610f83565b9150506104ff565b50600067ffffffffffffffff8111156105c3576105c2611059565b5b6040519080825280602002602001820160405280156105f15781602001602082028036833780820191505090505b50600190805190602001906106079291906109bc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161062e90610c37565b60006040518083038185875af1925050503d806000811461066b576040519150601f19603f3d011682016040523d82523d6000602084013e610670565b606091505b50509050806106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610c82565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000061079d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e090919063ffffffff16565b10156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590610ca2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082c9190610cf9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600182815481106108ae576108ad61102a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ec8361091c565b90506000670de0b6b3a764000085836109059190610e97565b61090f9190610d4f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190610b26565b5050509150506402540be400816109b49190610d80565b915050919050565b828054828255906000526020600020908101928215610a35579160200282015b82811115610a345782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dc565b5b509050610a429190610a46565b5090565b5b80821115610a5f576000816000905550600101610a47565b5090565b600081359050610a72816110e2565b92915050565b600081519050610a87816110f9565b92915050565b600081359050610a9c81611110565b92915050565b600081519050610ab181611110565b92915050565b600081519050610ac681611127565b92915050565b600060208284031215610ae257610ae1611088565b5b6000610af084828501610a63565b91505092915050565b600060208284031215610b0f57610b0e611088565b5b6000610b1d84828501610a8d565b91505092915050565b600080600080600060a08688031215610b4257610b41611088565b5b6000610b5088828901610ab7565b9550506020610b6188828901610a78565b9450506040610b7288828901610aa2565b9350506060610b8388828901610aa2565b9250506080610b9488828901610ab7565b9150509295509295909350565b610baa81610ef1565b82525050565b610bb981610f4d565b82525050565b6000610bcc600b83610ce8565b9150610bd78261108d565b602082019050919050565b6000610bef600083610cdd565b9150610bfa826110b6565b600082019050919050565b6000610c12601a83610ce8565b9150610c1d826110b9565b602082019050919050565b610c3181610f2d565b82525050565b6000610c4282610be2565b9150819050919050565b6000602082019050610c616000830184610ba1565b92915050565b6000602082019050610c7c6000830184610bb0565b92915050565b60006020820190508181036000830152610c9b81610bbf565b9050919050565b60006020820190508181036000830152610cbb81610c05565b9050919050565b6000602082019050610cd76000830184610c28565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d0482610f2d565b9150610d0f83610f2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4457610d43610fcc565b5b828201905092915050565b6000610d5a82610f2d565b9150610d6583610f2d565b925082610d7557610d74610ffb565b5b828204905092915050565b6000610d8b82610f03565b9150610d9683610f03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dd557610dd4610fcc565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1257610e11610fcc565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4f57610e4e610fcc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8c57610e8b610fcc565b5b828202905092915050565b6000610ea282610f2d565b9150610ead83610f2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee657610ee5610fcc565b5b828202905092915050565b6000610efc82610f0d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f5882610f5f565b9050919050565b6000610f6a82610f71565b9050919050565b6000610f7c82610f0d565b9050919050565b6000610f8e82610f2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fc157610fc0610fcc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f596f75206e65656420746f2073656e64206d6f72652045544821000000000000600082015250565b6110eb81610ef1565b81146110f657600080fd5b50565b61110281610f03565b811461110d57600080fd5b50565b61111981610f2d565b811461112457600080fd5b50565b61113081610f37565b811461113b57600080fd5b5056fea26469706673582212208ab180f36cda8b01eb8d6f99fc72f82b7f2019b58088910a3c3b18e0524ffd8f64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610104578063a48b45551461012f578063b60d42881461016c578063d7b4750c146101765761007b565b806314a96ea0146100805780633ccfd60b146100975780636b69a592146100ae578063893d20e8146100d9575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100ac610477565b005b3480156100ba57600080fd5b506100c36106b7565b6040516100d09190610cc2565b60405180910390f35b3480156100e557600080fd5b506100ee6106c4565b6040516100fb9190610c4c565b60405180910390f35b34801561011057600080fd5b506101196106ec565b6040516101269190610c67565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190610acc565b610716565b6040516101639190610cc2565b60405180910390f35b61017461075e565b005b34801561018257600080fd5b5061019d60048036038101906101989190610af9565b610898565b6040516101aa9190610c4c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610238576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102bc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610272575b5050505050905060005b81518110156103465760008282815181106102e4576102e361102a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061033e90610f83565b9150506102c6565b50600067ffffffffffffffff81111561036257610361611059565b5b6040519080825280602002602001820160405280156103905781602001602082028036833780820191505090505b50600190805190602001906103a69291906109bc565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103ed90610c37565b60006040518083038185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b5050905080610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610c82565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fc576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105a7576000600182815481106105225761052161102a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059f90610f83565b9150506104ff565b50600067ffffffffffffffff8111156105c3576105c2611059565b5b6040519080825280602002602001820160405280156105f15781602001602082028036833780820191505090505b50600190805190602001906106079291906109bc565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161062e90610c37565b60006040518083038185875af1925050503d806000811461066b576040519150601f19603f3d011682016040523d82523d6000602084013e610670565b606091505b50509050806106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610c82565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000061079d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e090919063ffffffff16565b10156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590610ca2565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461082c9190610cf9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600182815481106108ae576108ad61102a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ec8361091c565b90506000670de0b6b3a764000085836109059190610e97565b61090f9190610d4f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190610b26565b5050509150506402540be400816109b49190610d80565b915050919050565b828054828255906000526020600020908101928215610a35579160200282015b82811115610a345782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109dc565b5b509050610a429190610a46565b5090565b5b80821115610a5f576000816000905550600101610a47565b5090565b600081359050610a72816110e2565b92915050565b600081519050610a87816110f9565b92915050565b600081359050610a9c81611110565b92915050565b600081519050610ab181611110565b92915050565b600081519050610ac681611127565b92915050565b600060208284031215610ae257610ae1611088565b5b6000610af084828501610a63565b91505092915050565b600060208284031215610b0f57610b0e611088565b5b6000610b1d84828501610a8d565b91505092915050565b600080600080600060a08688031215610b4257610b41611088565b5b6000610b5088828901610ab7565b9550506020610b6188828901610a78565b9450506040610b7288828901610aa2565b9350506060610b8388828901610aa2565b9250506080610b9488828901610ab7565b9150509295509295909350565b610baa81610ef1565b82525050565b610bb981610f4d565b82525050565b6000610bcc600b83610ce8565b9150610bd78261108d565b602082019050919050565b6000610bef600083610cdd565b9150610bfa826110b6565b600082019050919050565b6000610c12601a83610ce8565b9150610c1d826110b9565b602082019050919050565b610c3181610f2d565b82525050565b6000610c4282610be2565b9150819050919050565b6000602082019050610c616000830184610ba1565b92915050565b6000602082019050610c7c6000830184610bb0565b92915050565b60006020820190508181036000830152610c9b81610bbf565b9050919050565b60006020820190508181036000830152610cbb81610c05565b9050919050565b6000602082019050610cd76000830184610c28565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d0482610f2d565b9150610d0f83610f2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d4457610d43610fcc565b5b828201905092915050565b6000610d5a82610f2d565b9150610d6583610f2d565b925082610d7557610d74610ffb565b5b828204905092915050565b6000610d8b82610f03565b9150610d9683610f03565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dd557610dd4610fcc565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1257610e11610fcc565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4f57610e4e610fcc565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8c57610e8b610fcc565b5b828202905092915050565b6000610ea282610f2d565b9150610ead83610f2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee657610ee5610fcc565b5b828202905092915050565b6000610efc82610f0d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f5882610f5f565b9050919050565b6000610f6a82610f71565b9050919050565b6000610f7c82610f0d565b9050919050565b6000610f8e82610f2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fc157610fc0610fcc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f596f75206e65656420746f2073656e64206d6f72652045544821000000000000600082015250565b6110eb81610ef1565b81146110f657600080fd5b50565b61110281610f03565b811461110d57600080fd5b50565b61111981610f2d565b811461112457600080fd5b50565b61113081610f37565b811461113b57600080fd5b5056fea26469706673582212208ab180f36cda8b01eb8d6f99fc72f82b7f2019b58088910a3c3b18e0524ffd8f64736f6c63430008070033",
  "devdoc": {
    "author": "Kieran Mc Gowan",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}